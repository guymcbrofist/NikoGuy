For our LabSpimbot implementation, my partner and I wanted to implement a strategy that involves dividing up the 10x10 "island" grid that the spimbots are on into four, separate 5x5 quadrants. At the beginning, we will gather a certain amount of resources that will allow our spimbot to plant, harvest, and water plants while simultaneously setting fires to the other spimbot's plants for the entire duration. Once we finish this initial gathering stage, we will implement an initial planting subroutine that will move our spimbot into the quadrant opposite of the other team's spimbot, and plant seeds in a cross-style formation. When spimbot has finished planting the seeds, it will water the center in order to optimize water spread. Spimbot will plant in cross formation until it has gone through the whole 5x5 tile quadrant. Then, Spimbot will enter a stage in which it will just set fire to the other spimbot's plants, based on how many adjacent (opposing) plants are next to that tile (to ensure maximum chance of fire spread), until the program triggers one of the implemented interrupts. In this exception, Spimbot will go to handle the interrupt, acknowledge it, and go back to setting fire to the opposing plants until the competition finishes.

Some interesting optimizations that we have implemented include:
-A planting formation that essentially plants seeds in a 5 tile cross, then waters the plant in the middle to optimize water spread and water resources.
-The arctan function given to us in order to create diagonal movement in the grid, instead of having to rely on one-dimensional movement.
-We utilized the Spimbot's ability to solve puzzles and, in general, multitask when it is moving over generally large distances. For example, if Spimbot goes to harvest one of its own plants in a tile located across the 2D-array, it will successively solve multiple puzzles  while moving there.
-The use of 5x5 quadrants from the 10x10 "island" in order to implement the inital planting stages and guard the quadrant that our spimbot claims as his own. 
-A fire setting subroutine that looks at how many adjacent opposing plants are around the tile of an opposing plant that our Spimbot finds on the grid; if there is a sufficient amount of plants growing, then it will set fire to target plant in order to increase the possibility of the fire spreading.
